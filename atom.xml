<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>boranの小さな巣</title>
  
  <subtitle>boranの小さな巣</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-24T12:25:41.208Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>chen-boran</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/04/24/%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E5%BA%93%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/04/24/%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E5%BA%93%E9%97%AE%E9%A2%98/</id>
    <published>2021-04-24T15:47:52.701Z</published>
    <updated>2021-04-24T12:25:41.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id="delete-truncate-区别"><a href="#delete-truncate-区别" class="headerlink" title="delete truncate 区别"></a>delete truncate 区别</h2><h2 id="sql基本组成"><a href="#sql基本组成" class="headerlink" title="sql基本组成"></a>sql基本组成</h2><p><strong>DDL****（Data</strong> <strong>Definition Language</strong>）<strong>数据库<strong><strong>定义</strong></strong>语言</strong></p><p>  DDL不需要commit. eg. CREATE ALTER DROP TRUNCATE COMMENT RENAME</p><p>****DML**（*<em>Data Manipulation Language*<em>）*<em>数据操纵语言*</em></em></em></p><p>  DML需要commit. eg. SELECT INSERT UPDATE DELETE MERGE CALL EXPLAIN PLAN LOCK TABLE</p><p><strong>DCL<strong><strong>（</strong></strong>Data Control Language<strong><strong>）</strong></strong>数据库控制语言</strong> <strong>授权，角色控制等</strong><br>  GRANT 授权, REVOKE 取消授权<br><strong>TCL<strong><strong>（</strong></strong>Transaction Control Language<strong><strong>）</strong></strong>事务控制语言</strong><br>  SAVEPOINT 设置保存点, ROLLBACK 回滚, SET TRANSACTION</p><h2 id="命令执行顺序"><a href="#命令执行顺序" class="headerlink" title="命令执行顺序"></a>命令执行顺序</h2><p>sql执行顺序<br>(1)from<br>(3) join<br>(2) on<br>(4) where<br>(5)group by(开始使用select中的别名，后面的语句中都可以使用)<br>(6) avg,sum….<br>(7)having<br>(8) select<br>(9) distinct<br>(10) order by</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;delete-truncate-区别&quot;&gt;&lt;a href=&quot;#delete-truncate-区别&quot; class=&quot;headerlink&quot; title=&quot;delete truncate 区别&quot;&gt;&lt;/a&gt;delete truncate 区别&lt;/h2&gt;&lt;h2 id=&quot;s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/04/23/MySQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://example.com/2021/04/23/MySQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2021-04-23T06:43:51.364Z</published>
    <updated>2017-10-10T09:34:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>##本单元目标<br>    一、为什么要学习数据库<br>    二、数据库的相关概念<br>        DBMS、DB、SQL<br>    三、数据库存储数据的特点<br>    四、初始MySQL<br>        MySQL产品的介绍<br>        MySQL产品的安装          ★<br>        MySQL服务的启动和停止     ★<br>        MySQL服务的登录和退出     ★<br>        MySQL的常见命令和语法规范<br>    五、DQL语言的学习   ★<br>        基础查询        ★<br>        条件查询         ★<br>        排序查询         ★<br>        常见函数        ★<br>        分组函数        ★<br>        分组查询           ★<br>        连接查询         ★<br>        子查询       √<br>        分页查询       ★<br>        union联合查询    √            </p><pre><code>六、DML语言的学习    ★                 插入语句                            修改语句                            删除语句                        七、DDL语言的学习      库和表的管理     √                    常见数据类型介绍  √              常见约束        √            八、TCL语言的学习    事务和事务处理                 九、视图的讲解           √十、变量                      十一、存储过程和函数   十二、流程控制结构       </code></pre><p>##数据库的好处<br>    1.持久化数据到本地<br>    2.可以实现结构化查询，方便管理</p><p>##数据库相关概念<br>    1、DB：数据库，保存一组有组织的数据的容器<br>    2、DBMS：数据库管理系统，又称为数据库软件（产品），用于管理DB中的数据<br>    3、SQL:结构化查询语言，用于和DBMS通信的语言</p><p>##数据库存储数据的特点<br>    1、将数据放到表中，表再放到库中<br>    2、一个数据库中可以有多个表，每个表都有一个的名字，用来标识自己。表名具有唯一性。<br>    3、表具有一些特性，这些特性定义了数据在表中如何存储，类似java中 “类”的设计。<br>    4、表由列组成，我们也称为字段。所有表都是由一个或多个列组成的，每一列类似java 中的”属性”<br>    5、表中的数据是按行存储的，每一行类似于java中的“对象”。</p><p>##MySQL产品的介绍和安装</p><p>###MySQL服务的启动和停止<br>    方式一：计算机——右击管理——服务<br>    方式二：通过管理员身份运行<br>    net start 服务名（启动服务）<br>    net stop 服务名（停止服务）</p><p>###MySQL服务的登录和退出<br>    方式一：通过mysql自带的客户端<br>    只限于root用户</p><pre><code>方式二：通过windows自带的客户端登录：mysql 【-h主机名 -P端口号 】-u用户名 -p密码退出：exit或ctrl+C</code></pre><p>###MySQL的常见命令 </p><pre><code>1.查看当前所有的数据库show databases;2.打开指定的库use 库名3.查看当前库的所有表show tables;4.查看其它库的所有表show tables from 库名;5.创建表create table 表名(    列名 列类型,    列名 列类型，    。。。);6.查看表结构desc 表名;7.查看服务器的版本方式一：登录到mysql服务端select version();方式二：没有登录到mysql服务端mysql --version或mysql --V</code></pre><p>###MySQL的语法规范<br>    1.不区分大小写,但建议关键字大写，表名、列名小写<br>    2.每条命令最好用分号结尾<br>    3.每条命令根据需要，可以进行缩进 或换行<br>    4.注释<br>        单行注释：#注释文字<br>        单行注释：– 注释文字<br>        多行注释：/* 注释文字  */</p><p>###SQL的语言分类<br>    DQL（Data Query Language）：数据查询语言<br>        select<br>    DML(Data Manipulate Language):数据操作语言<br>        insert 、update、delete<br>    DDL（Data Define Languge）：数据定义语言<br>        create、drop、alter<br>    TCL（Transaction Control Language）：事务控制语言<br>        commit、rollback</p><p>###SQL的常见命令</p><pre><code>show databases； 查看所有的数据库use 库名； 打开指定 的库show tables ; 显示库中的所有表show tables from 库名;显示指定库中的所有表create table 表名(    字段名 字段类型,        字段名 字段类型); 创建表desc 表名; 查看指定表的结构select * from 表名;显示表中的所有数据</code></pre><p>##DQL语言的学习<br>###进阶1：基础查询<br>    语法：<br>    SELECT 要查询的东西<br>    【FROM 表名】;</p><pre><code>类似于Java中 :System.out.println(要打印的东西);特点：①通过select查询完的结果 ，是一个虚拟的表格，不是真实存在② 要查询的东西 可以是常量值、可以是表达式、可以是字段、可以是函数</code></pre><p>###进阶2：条件查询<br>    条件查询：根据条件过滤原始表的数据，查询到想要的数据<br>    语法：<br>    select<br>        要查询的字段|表达式|常量值|函数<br>    from<br>        表<br>    where<br>        条件 ;</p><pre><code>分类：一、条件表达式    示例：salary&gt;10000    条件运算符：    &gt; &lt; &gt;= &lt;= = != &lt;&gt;二、逻辑表达式示例：salary&gt;10000 &amp;&amp; salary&lt;20000逻辑运算符：    and（&amp;&amp;）:两个条件如果同时成立，结果为true，否则为false    or(||)：两个条件只要有一个成立，结果为true，否则为false    not(!)：如果条件成立，则not后为false，否则为true三、模糊查询示例：last_name like &#39;a%&#39;</code></pre><p>###进阶3：排序查询    </p><pre><code>语法：select    要查询的东西from    表where     条件order by 排序的字段|表达式|函数|别名 【asc|desc】</code></pre><p>###进阶4：常见函数<br>    一、单行函数<br>    1、字符函数<br>        concat拼接<br>        substr截取子串<br>        upper转换成大写<br>        lower转换成小写<br>        trim去前后指定的空格和字符<br>        ltrim去左边空格<br>        rtrim去右边空格<br>        replace替换<br>        lpad左填充<br>        rpad右填充<br>        instr返回子串第一次出现的索引<br>        length 获取字节个数</p><pre><code>2、数学函数    round 四舍五入    rand 随机数    floor向下取整    ceil向上取整    mod取余    truncate截断3、日期函数    now当前系统日期+时间    curdate当前系统日期    curtime当前系统时间    str_to_date 将字符转换成日期    date_format将日期转换成字符4、流程控制函数    if 处理双分支    case语句 处理多分支        情况1：处理等值判断        情况2：处理条件判断    5、其他函数    version版本    database当前库    user当前连接用户</code></pre><p>二、分组函数</p><pre><code>    sum 求和    max 最大值    min 最小值    avg 平均值    count 计数    特点：    1、以上五个分组函数都忽略null值，除了count(*)    2、sum和avg一般用于处理数值型        max、min、count可以处理任何数据类型    3、都可以搭配distinct使用，用于统计去重后的结果    4、count的参数可以支持：        字段、*、常量值，一般放1       建议使用 count(*)</code></pre><p>##进阶5：分组查询<br>    语法：<br>    select 查询的字段，分组函数<br>    from 表<br>    group by 分组的字段</p><pre><code>特点：1、可以按单个字段分组2、和分组函数一同查询的字段最好是分组后的字段3、分组筛选        针对的表    位置            关键字分组前筛选：    原始表        group by的前面        where分组后筛选：    分组后的结果集    group by的后面        having4、可以按多个字段分组，字段之间用逗号隔开5、可以支持排序6、having后可以支持别名</code></pre><p>##进阶6：多表连接查询</p><pre><code>笛卡尔乘积：如果连接条件省略或无效则会出现解决办法：添加上连接条件</code></pre><p>一、传统模式下的连接 ：等值连接——非等值连接</p><pre><code>1.等值连接的结果 = 多个表的交集2.n表连接，至少需要n-1个连接条件3.多个表不分主次，没有顺序要求4.一般为表起别名，提高阅读性和性能</code></pre><p>二、sql99语法：通过join关键字实现连接</p><pre><code>含义：1999年推出的sql语法支持：等值连接、非等值连接 （内连接）外连接交叉连接语法：select 字段，...from 表1【inner|left outer|right outer|cross】join 表2 on  连接条件【inner|left outer|right outer|cross】join 表3 on  连接条件【where 筛选条件】【group by 分组字段】【having 分组后的筛选条件】【order by 排序的字段或表达式】好处：语句上，连接条件和筛选条件实现了分离，简洁明了！</code></pre><p>三、自连接</p><p>案例：查询员工名和直接上级的名称</p><p>sql99</p><pre><code>SELECT e.last_name,m.last_nameFROM employees eJOIN employees m ON e.`manager_id`=m.`employee_id`;</code></pre><p>sql92</p><pre><code>SELECT e.last_name,m.last_nameFROM employees e,employees m WHERE e.`manager_id`=m.`employee_id`;</code></pre><p>##进阶7：子查询</p><p>含义：</p><pre><code>一条查询语句中又嵌套了另一条完整的select语句，其中被嵌套的select语句，称为子查询或内查询在外面的查询语句，称为主查询或外查询</code></pre><p>特点：</p><pre><code>1、子查询都放在小括号内2、子查询可以放在from后面、select后面、where后面、having后面，但一般放在条件的右侧3、子查询优先于主查询执行，主查询使用了子查询的执行结果4、子查询根据查询结果的行数不同分为以下两类：① 单行子查询    结果集只有一行    一般搭配单行操作符使用：&gt; &lt; = &lt;&gt; &gt;= &lt;=     非法使用子查询的情况：    a、子查询的结果为一组值    b、子查询的结果为空    ② 多行子查询    结果集有多行    一般搭配多行操作符使用：any、all、in、not in    in： 属于子查询结果中的任意一个就行    any和all往往可以用其他查询代替</code></pre><p>##进阶8：分页查询</p><p>应用场景：</p><pre><code>实际的web项目中需要根据用户的需求提交对应的分页查询的sql语句</code></pre><p>语法：</p><pre><code>select 字段|表达式,...from 表【where 条件】【group by 分组字段】【having 条件】【order by 排序的字段】limit 【起始的条目索引，】条目数;</code></pre><p>特点：</p><pre><code>1.起始条目索引从0开始2.limit子句放在查询语句的最后3.公式：select * from  表 limit （page-1）*sizePerPage,sizePerPage假如:每页显示条目数sizePerPage要显示的页数 page</code></pre><p>##进阶9：联合查询</p><p>引入：<br>    union 联合、合并</p><p>语法：</p><pre><code>select 字段|常量|表达式|函数 【from 表】 【where 条件】 union 【all】select 字段|常量|表达式|函数 【from 表】 【where 条件】 union 【all】select 字段|常量|表达式|函数 【from 表】 【where 条件】 union  【all】.....select 字段|常量|表达式|函数 【from 表】 【where 条件】</code></pre><p>特点：</p><pre><code>1、多条查询语句的查询的列数必须是一致的2、多条查询语句的查询的列的类型几乎相同3、union代表去重，union all代表不去重</code></pre><p>##DML语言</p><p>###插入</p><p>语法：<br>    insert into 表名(字段名，…)<br>    values(值1，…);</p><p>特点：</p><pre><code>1、字段类型和值类型一致或兼容，而且一一对应2、可以为空的字段，可以不用插入值，或用null填充3、不可以为空的字段，必须插入值4、字段个数和值的个数必须一致5、字段可以省略，但默认所有字段，并且顺序和表中的存储顺序一致</code></pre><p>###修改</p><p>修改单表语法：</p><pre><code>update 表名 set 字段=新值,字段=新值【where 条件】</code></pre><p>修改多表语法：</p><pre><code>update 表1 别名1,表2 别名2set 字段=新值，字段=新值where 连接条件and 筛选条件</code></pre><p>###删除</p><p>方式1：delete语句 </p><p>单表的删除： ★<br>    delete from 表名 【where 筛选条件】</p><p>多表的删除：<br>    delete 别名1，别名2<br>    from 表1 别名1，表2 别名2<br>    where 连接条件<br>    and 筛选条件;</p><p>方式2：truncate语句</p><pre><code>truncate table 表名</code></pre><p>两种方式的区别【面试题】</p><pre><code>#1.truncate不能加where条件，而delete可以加where条件#2.truncate的效率高一丢丢#3.truncate 删除带自增长的列的表后，如果再插入数据，数据从1开始#delete 删除带自增长列的表后，如果再插入数据，数据从上一次的断点处开始#4.truncate删除不能回滚，delete删除可以回滚</code></pre><p>##DDL语句<br>###库和表的管理<br>库的管理：</p><pre><code>一、创建库create database 库名二、删除库drop database 库名</code></pre><p>表的管理：<br>    #1.创建表</p><pre><code>CREATE TABLE IF NOT EXISTS stuinfo(    stuId INT,    stuName VARCHAR(20),    gender CHAR,    bornDate DATETIME    );DESC studentinfo;#2.修改表 alter语法：ALTER TABLE 表名 ADD|MODIFY|DROP|CHANGE COLUMN 字段名 【字段类型】;#①修改字段名ALTER TABLE studentinfo CHANGE  COLUMN sex gender CHAR;#②修改表名ALTER TABLE stuinfo RENAME [TO]  studentinfo;#③修改字段类型和列级约束ALTER TABLE studentinfo MODIFY COLUMN borndate DATE ;#④添加字段ALTER TABLE studentinfo ADD COLUMN email VARCHAR(20) first;#⑤删除字段ALTER TABLE studentinfo DROP COLUMN email;#3.删除表DROP TABLE [IF EXISTS] studentinfo;</code></pre><p>###常见类型</p><pre><code>整型：    小数：    浮点型    定点型字符型：日期型：Blob类型：</code></pre><p>###常见约束</p><pre><code>NOT NULLDEFAULTUNIQUECHECKPRIMARY KEYFOREIGN KEY</code></pre><p>##数据库事务<br>###含义<br>    通过一组逻辑操作单元（一组DML——sql语句），将数据从一种状态切换到另外一种状态</p><p>###特点<br>    （ACID）<br>    原子性：要么都执行，要么都回滚<br>    一致性：保证数据的状态操作前和操作后保持一致<br>    隔离性：多个事务同时操作相同数据库的同一个数据时，一个事务的执行不受另外一个事务的干扰<br>    持久性：一个事务一旦提交，则数据将持久化到本地，除非其他事务对其进行修改</p><p>相关步骤：</p><pre><code>1、开启事务2、编写事务的一组逻辑操作单元（多条sql语句）3、提交事务或回滚事务</code></pre><p>###事务的分类：</p><p>隐式事务，没有明显的开启和结束事务的标志</p><pre><code>比如insert、update、delete语句本身就是一个事务</code></pre><p>显式事务，具有明显的开启和结束事务的标志</p><pre><code>    1、开启事务    取消自动提交事务的功能        2、编写事务的一组逻辑操作单元（多条sql语句）    insert    update    delete        3、提交事务或回滚事务</code></pre><p>###使用到的关键字</p><pre><code>set autocommit=0;start transaction;commit;rollback;savepoint  断点commit to 断点rollback to 断点</code></pre><p>###事务的隔离级别:</p><p>事务并发问题如何发生？</p><pre><code>当多个事务同时操作同一个数据库的相同数据时</code></pre><p>事务的并发问题有哪些？</p><pre><code>脏读：一个事务读取到了另外一个事务未提交的数据不可重复读：同一个事务中，多次读取到的数据不一致幻读：一个事务读取数据时，另外一个事务进行更新，导致第一个事务读取到了没有更新的数据</code></pre><p>如何避免事务的并发问题？</p><pre><code>通过设置事务的隔离级别1、READ UNCOMMITTED2、READ COMMITTED 可以避免脏读3、REPEATABLE READ 可以避免脏读、不可重复读和一部分幻读4、SERIALIZABLE可以避免脏读、不可重复读和幻读</code></pre><p>设置隔离级别：</p><pre><code>set session|global  transaction isolation level 隔离级别名;</code></pre><p>查看隔离级别：</p><pre><code>select @@tx_isolation;</code></pre><p>##视图<br>含义：理解成一张虚拟的表</p><p>视图和表的区别：</p><pre><code>    使用方式    占用物理空间视图    完全相同    不占用，仅仅保存的是sql逻辑表    完全相同    占用</code></pre><p>视图的好处：</p><pre><code>1、sql语句提高重用性，效率高2、和表实现了分离，提高了安全性</code></pre><p>###视图的创建<br>    语法：<br>    CREATE VIEW  视图名<br>    AS<br>    查询语句;<br>###视图的增删改查<br>    1、查看视图的数据 ★</p><pre><code>SELECT * FROM my_v4;SELECT * FROM my_v1 WHERE last_name=&#39;Partners&#39;;2、插入视图的数据INSERT INTO my_v4(last_name,department_id) VALUES(&#39;虚竹&#39;,90);3、修改视图的数据UPDATE my_v4 SET last_name =&#39;梦姑&#39; WHERE last_name=&#39;虚竹&#39;;4、删除视图的数据DELETE FROM my_v4;</code></pre><p>###某些视图不能更新<br>    包含以下关键字的sql语句：分组函数、distinct、group  by、having、union或者union all<br>    常量视图<br>    Select中包含子查询<br>    join<br>    from一个不能更新的视图<br>    where子句的子查询引用了from子句中的表<br>###视图逻辑的更新<br>    #方式一：<br>    CREATE OR REPLACE VIEW test_v7<br>    AS<br>    SELECT last_name FROM employees<br>    WHERE employee_id&gt;100;</p><pre><code>#方式二:ALTER VIEW test_v7ASSELECT employee_id FROM employees;SELECT * FROM test_v7;</code></pre><p>###视图的删除<br>    DROP VIEW test_v1,test_v2,test_v3;<br>###视图结构的查看<br>    DESC test_v7;<br>    SHOW CREATE VIEW test_v7;</p><p>##存储过程</p><p>含义：一组经过预先编译的sql语句的集合<br>好处：</p><pre><code>1、提高了sql语句的重用性，减少了开发程序员的压力2、提高了效率3、减少了传输次数</code></pre><p>分类：</p><pre><code>1、无返回无参2、仅仅带in类型，无返回有参3、仅仅带out类型，有返回无参4、既带in又带out，有返回有参5、带inout，有返回有参注意：in、out、inout都可以在一个存储过程中带多个</code></pre><p>###创建存储过程<br>语法：</p><pre><code>create procedure 存储过程名(in|out|inout 参数名  参数类型,...)begin    存储过程体end</code></pre><p>类似于方法：</p><pre><code>修饰符 返回类型 方法名(参数类型 参数名,...)&#123;    方法体;&#125;</code></pre><p>注意</p><pre><code>1、需要设置新的结束标记delimiter 新的结束标记示例：delimiter $CREATE PROCEDURE 存储过程名(IN|OUT|INOUT 参数名  参数类型,...)BEGIN    sql语句1;    sql语句2;END $2、存储过程体中可以有多条sql语句，如果仅仅一条sql语句，则可以省略begin end3、参数前面的符号的意思in:该参数只能作为输入 （该参数不能做返回值）out：该参数只能作为输出（该参数只能做返回值）inout：既能做输入又能做输出</code></pre><p>#调用存储过程<br>    call 存储过程名(实参列表)<br>##函数</p><p>###创建函数</p><p>学过的函数：LENGTH、SUBSTR、CONCAT等<br>语法：</p><pre><code>CREATE FUNCTION 函数名(参数名 参数类型,...) RETURNS 返回类型BEGIN    函数体END</code></pre><p>###调用函数<br>    SELECT 函数名（实参列表）</p><p>###函数和存储过程的区别</p><pre><code>        关键字        调用语法    返回值            应用场景函数        FUNCTION    SELECT 函数()    只能是一个        一般用于查询结果为一个值并返回时，当有返回值而且仅仅一个存储过程    PROCEDURE    CALL 存储过程()    可以有0个或多个        一般用于更新</code></pre><p>##流程控制结构</p><p>###系统变量<br>一、全局变量</p><p>作用域：针对于所有会话（连接）有效，但不能跨重启</p><pre><code>查看所有全局变量SHOW GLOBAL VARIABLES;查看满足条件的部分系统变量SHOW GLOBAL VARIABLES LIKE &#39;%char%&#39;;查看指定的系统变量的值SELECT @@global.autocommit;为某个系统变量赋值SET @@global.autocommit=0;SET GLOBAL autocommit=0;</code></pre><p>二、会话变量</p><p>作用域：针对于当前会话（连接）有效</p><pre><code>查看所有会话变量SHOW SESSION VARIABLES;查看满足条件的部分会话变量SHOW SESSION VARIABLES LIKE &#39;%char%&#39;;查看指定的会话变量的值SELECT @@autocommit;SELECT @@session.tx_isolation;为某个会话变量赋值SET @@session.tx_isolation=&#39;read-uncommitted&#39;;SET SESSION tx_isolation=&#39;read-committed&#39;;</code></pre><p>###自定义变量<br>一、用户变量</p><p>声明并初始化：</p><pre><code>SET @变量名=值;SET @变量名:=值;SELECT @变量名:=值;</code></pre><p>赋值：</p><pre><code>方式一：一般用于赋简单的值SET 变量名=值;SET 变量名:=值;SELECT 变量名:=值;方式二：一般用于赋表 中的字段值SELECT 字段名或表达式 INTO 变量FROM 表;</code></pre><p>使用：</p><pre><code>select @变量名;</code></pre><p>二、局部变量</p><p>声明：</p><pre><code>declare 变量名 类型 【default 值】;</code></pre><p>赋值：</p><pre><code>方式一：一般用于赋简单的值SET 变量名=值;SET 变量名:=值;SELECT 变量名:=值;方式二：一般用于赋表 中的字段值SELECT 字段名或表达式 INTO 变量FROM 表;</code></pre><p>使用：</p><pre><code>select 变量名</code></pre><p>二者的区别：</p><pre><code>        作用域            定义位置        语法</code></pre><p>用户变量    当前会话        会话的任何地方        加@符号，不用指定类型<br>局部变量    定义它的BEGIN END中     BEGIN END的第一句话    一般不用加@,需要指定类型</p><p>###分支<br>一、if函数<br>    语法：if(条件，值1，值2)<br>    特点：可以用在任何位置</p><p>二、case语句</p><p>语法：</p><pre><code>情况一：类似于switchcase 表达式when 值1 then 结果1或语句1(如果是语句，需要加分号) when 值2 then 结果2或语句2(如果是语句，需要加分号)...else 结果n或语句n(如果是语句，需要加分号)end 【case】（如果是放在begin end中需要加上case，如果放在select后面不需要）情况二：类似于多重ifcase when 条件1 then 结果1或语句1(如果是语句，需要加分号) when 条件2 then 结果2或语句2(如果是语句，需要加分号)...else 结果n或语句n(如果是语句，需要加分号)end 【case】（如果是放在begin end中需要加上case，如果放在select后面不需要）</code></pre><p>特点：<br>    可以用在任何位置</p><p>三、if elseif语句</p><p>语法：</p><pre><code>if 情况1 then 语句1;elseif 情况2 then 语句2;...else 语句n;end if;</code></pre><p>特点：<br>    只能用在begin end中！！！！！！！！！！！！！！！</p><p>三者比较：<br>            应用场合<br>    if函数        简单双分支<br>    case结构    等值判断 的多分支<br>    if结构        区间判断 的多分支</p><p>###循环</p><p>语法：</p><pre><code>【标签：】WHILE 循环条件  DO    循环体END WHILE 【标签】;</code></pre><p>特点：</p><pre><code>只能放在BEGIN END里面如果要搭配leave跳转语句，需要使用标签，否则可以不用标签leave类似于java中的break语句，跳出所在循环！！！</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;##本单元目标&lt;br&gt;    一、为什么要学习数据库&lt;br&gt;    二、数据库的相关概念&lt;br&gt;        DBMS、DB、SQL&lt;br&gt;    三、数据库存储数据的特点&lt;br&gt;    四、初始MySQL&lt;br&gt;        MySQL产品的介绍&lt;br&gt;       </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL</title>
    <link href="http://example.com/2021/04/22/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/"/>
    <id>http://example.com/2021/04/22/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/</id>
    <published>2021-04-22T15:49:22.000Z</published>
    <updated>2021-04-22T15:50:24.589Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一章-SQL"><a href="#第一章-SQL" class="headerlink" title="第一章 SQL"></a>第一章 SQL</h3><h4 id="1-数据库"><a href="#1-数据库" class="headerlink" title="1.数据库"></a>1.数据库</h4><ul><li><p>数据库软件应称为DBMS（数据库管理系统）。</p></li><li><p>表（table） 某种特定类型数据的结构化清单。</p><ul><li>表名 表名具有唯一性 ， 在相同数据库中不能两次使用相同的表名。</li><li>模式（schema） 关于数据库和表的布局及特性的信息。</li></ul></li><li><p>列 </p><ul><li><p>表由列组成。列中存储着表中某部分的信息</p></li><li><p>列（column） 表中的一个字段。所有表都是由一个或多个列组</p><p>成的。</p></li></ul></li><li><p>数据类型（datatype）</p><ul><li>数据类型  所容许的数据的类型。限制（或容许）列中存储的数据。</li></ul></li><li><p>行（row） 表中的一个记录。</p><ul><li><p>表中的数据是按行存储</p></li><li><p>主键（primary key）列（或一组列），其值能够唯一区分表</p><p>中每个行。</p><ul><li><p>大多数数据库应保证创建的每个表具有一个主键。</p></li><li><p> 任意两行都不具有相同的主键值；</p><p> 每个行都必须具有一个主键值（主键列不允许NULL值）。</p></li><li><p>主键的最好习惯 ：</p><p>不更新主键列中的值；</p><p>不重用主键列的值；</p><p> 不在主键列中使用可能会更改的值。 </p></li></ul></li></ul></li></ul><h4 id="2-SQL-：结构化查询语言"><a href="#2-SQL-：结构化查询语言" class="headerlink" title="2.SQL    ：结构化查询语言"></a>2.SQL    ：结构化查询语言</h4><ul><li><p>优点：SQL不是某个特定数据库供应商专有的语言。 </p><p> SQL简单易学 </p><p> 它 是一种强有力的语言， 可以进行非常复杂和高级的数据库操作。</p></li><li><p>事实上任意两个DBMS实现的SQL都不完全相同</p></li></ul><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>​    介绍了什么是SQL以及它为什么很有用</p><h3 id="第二章MYSQL-简介"><a href="#第二章MYSQL-简介" class="headerlink" title="第二章MYSQL 简介"></a>第二章MYSQL 简介</h3><h4 id="1-mysql"><a href="#1-mysql" class="headerlink" title="1.mysql"></a>1.mysql</h4><p>​    一种DBMS，即它是一种数据库软件。</p><ul><li><p>客户机是与用户打交道的软件。</p><p>服务器部分是负责所有数据访问和处理的一个软件。</p></li><li><p>版本： 4——InnoDB引擎，增加事务处理（第26章）、并（第17章）、改</p><p>​            进全文本搜索（第18章）等的支持。</p><p>​             4.1——对函数库、子查询（第14章）、集成帮助等的重要增加。</p><p>​             5——存储过程 、触发器 、游标 、视图 </p></li></ul><h4 id="2-MySQL工具"><a href="#2-MySQL工具" class="headerlink" title="2.MySQL工具"></a>2.MySQL工具</h4><p>​        mysql命令行实用程序；图形交互客户机</p><h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h4><p>本章介绍了什么是MySQL，并引入了几个客户机实用程序（一个命</p><p>令行实用程序，两个可选但强烈建议使用的图形实用程序）。</p><h3 id="第三章-使用mysql"><a href="#第三章-使用mysql" class="headerlink" title="第三章 使用mysql"></a>第三章 使用mysql</h3><h4 id="1-链接"><a href="#1-链接" class="headerlink" title="1.链接"></a>1.链接</h4><h4 id="2-选择数据库"><a href="#2-选择数据库" class="headerlink" title="2.选择数据库"></a>2.选择数据库</h4><h4 id="3-了解数据库和表"><a href="#3-了解数据库和表" class="headerlink" title="3.了解数据库和表"></a>3.了解数据库和表</h4><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><h3 id="第四章-检索数据"><a href="#第四章-检索数据" class="headerlink" title="第四章 检索数据"></a>第四章 检索数据</h3><h4 id="select"><a href="#select" class="headerlink" title="select"></a>select</h4><h4 id="检索单列"><a href="#检索单列" class="headerlink" title="检索单列"></a>检索单列</h4><h4 id="检所多列"><a href="#检所多列" class="headerlink" title="检所多列"></a>检所多列</h4><h4 id="检索所有列"><a href="#检索所有列" class="headerlink" title="检索所有列"></a>检索所有列</h4><h4 id="检索所有行"><a href="#检索所有行" class="headerlink" title="检索所有行"></a>检索所有行</h4><h4 id="检所不同的行"><a href="#检所不同的行" class="headerlink" title="检所不同的行"></a>检所不同的行</h4><h4 id="限制结果"><a href="#限制结果" class="headerlink" title="限制结果"></a>限制结果</h4><h4 id="完全限制表名"><a href="#完全限制表名" class="headerlink" title="完全限制表名"></a>完全限制表名</h4><h4 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h4><h3 id="第五章-排序检索数据"><a href="#第五章-排序检索数据" class="headerlink" title="第五章 排序检索数据"></a>第五章 排序检索数据</h3><h4 id="排序数据"><a href="#排序数据" class="headerlink" title="排序数据"></a>排序数据</h4><h4 id="按多个列排序"><a href="#按多个列排序" class="headerlink" title="按多个列排序"></a>按多个列排序</h4><h4 id="指定排序方向"><a href="#指定排序方向" class="headerlink" title="指定排序方向"></a>指定排序方向</h4><h4 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h4><h3 id="第六章-过滤数据"><a href="#第六章-过滤数据" class="headerlink" title="第六章 过滤数据"></a>第六章 过滤数据</h3><h4 id="where-子句"><a href="#where-子句" class="headerlink" title="where 子句"></a>where 子句</h4><h4 id="where子句操作符"><a href="#where子句操作符" class="headerlink" title="where子句操作符"></a>where子句操作符</h4><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><h3 id="第七章-数据过滤"><a href="#第七章-数据过滤" class="headerlink" title="第七章 数据过滤"></a>第七章 数据过滤</h3><h4 id="组合where子句"><a href="#组合where子句" class="headerlink" title="组合where子句"></a>组合where子句</h4><h4 id="IN"><a href="#IN" class="headerlink" title="IN"></a>IN</h4><h4 id="NOT"><a href="#NOT" class="headerlink" title="NOT"></a>NOT</h4><h4 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h4><h3 id="第八章-使用通配符过滤数据"><a href="#第八章-使用通配符过滤数据" class="headerlink" title="第八章 使用通配符过滤数据"></a>第八章 使用通配符过滤数据</h3><h4 id="like"><a href="#like" class="headerlink" title="like"></a>like</h4><h4 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h4><h4 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h4><h3 id="第九章-正则表达式进行搜索"><a href="#第九章-正则表达式进行搜索" class="headerlink" title="第九章 正则表达式进行搜索"></a>第九章 正则表达式进行搜索</h3><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><h4 id="MYSQL-正则表达式"><a href="#MYSQL-正则表达式" class="headerlink" title="MYSQL 正则表达式"></a>MYSQL 正则表达式</h4><h4 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h4><h3 id="第十章计算字段"><a href="#第十章计算字段" class="headerlink" title="第十章计算字段"></a>第十章计算字段</h3><h4 id="计算字段"><a href="#计算字段" class="headerlink" title="计算字段"></a>计算字段</h4><h4 id="拼接字段"><a href="#拼接字段" class="headerlink" title="拼接字段"></a>拼接字段</h4><h4 id="算术计算"><a href="#算术计算" class="headerlink" title="算术计算"></a>算术计算</h4><h4 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h4><h3 id="11章-计算字段"><a href="#11章-计算字段" class="headerlink" title="11章 计算字段"></a>11章 计算字段</h3><h4 id="计算字段-1"><a href="#计算字段-1" class="headerlink" title="计算字段"></a>计算字段</h4><h4 id="2-拼接字段"><a href="#2-拼接字段" class="headerlink" title="2.拼接字段"></a>2.拼接字段</h4><ul><li>别名<ul><li>其他用途</li><li></li></ul></li><li>  拼接</li><li>  去空格</li><li>  算术运算</li></ul><h3 id="11章-数据处理函数"><a href="#11章-数据处理函数" class="headerlink" title="11章 数据处理函数"></a>11章 数据处理函数</h3><p>1.函数：文本函数；数值函数；日期时间函数；系统函数</p><p>2.文本函数</p><ul><li></li></ul><p>3.数值函数</p><ul><li></li></ul><p>4.日期时间函数</p><ul><li></li><li></li><li><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210421183227715.png" alt="image-20210421183227715"></p></li></ul><p>5.系统函数</p><ul><li></li></ul><h3 id="12章-汇总数据"><a href="#12章-汇总数据" class="headerlink" title="12章 汇总数据"></a>12章 汇总数据</h3><h3 id="13章-分组数据"><a href="#13章-分组数据" class="headerlink" title="13章 分组数据"></a>13章 分组数据</h3><h4 id="1-数据分组"><a href="#1-数据分组" class="headerlink" title="1.数据分组"></a>1.数据分组</h4><h4 id="2-创建分组"><a href="#2-创建分组" class="headerlink" title="2.创建分组"></a>2.创建分组</h4><h4 id="3-过滤分组"><a href="#3-过滤分组" class="headerlink" title="3.过滤分组"></a>3.过滤分组</h4><h4 id="4-分组和和排序"><a href="#4-分组和和排序" class="headerlink" title="4.分组和和排序"></a>4.分组和和排序</h4><h4 id="5-select子句顺序"><a href="#5-select子句顺序" class="headerlink" title="5.select子句顺序"></a>5.select子句顺序</h4><h3 id="14章-子查询"><a href="#14章-子查询" class="headerlink" title="14章 子查询"></a>14章 子查询</h3><p>1.子查询</p><ol start="2"><li></li></ol><h3 id="第十五章-连结表"><a href="#第十五章-连结表" class="headerlink" title="第十五章 连结表"></a>第十五章 连结表</h3><h4 id="联结"><a href="#联结" class="headerlink" title="联结"></a>联结</h4><h4 id="创建联结"><a href="#创建联结" class="headerlink" title="创建联结"></a>创建联结</h4><h4 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h4><h4 id="-1"><a href="#-1" class="headerlink" title=""></a></h4><h3 id="第十六章-创建高级联结"><a href="#第十六章-创建高级联结" class="headerlink" title="第十六章 创建高级联结"></a>第十六章 创建高级联结</h3><h4 id="表别名"><a href="#表别名" class="headerlink" title="表别名"></a>表别名</h4><h4 id="不同类型联结"><a href="#不同类型联结" class="headerlink" title="不同类型联结"></a>不同类型联结</h4><h4 id="带聚集函数的联结"><a href="#带聚集函数的联结" class="headerlink" title="带聚集函数的联结"></a>带聚集函数的联结</h4><h4 id="联结和连接条件"><a href="#联结和连接条件" class="headerlink" title="联结和连接条件"></a>联结和连接条件</h4><h4 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h4><h3 id="第十七章-组合查询"><a href="#第十七章-组合查询" class="headerlink" title="第十七章 组合查询"></a>第十七章 组合查询</h3><h4 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h4><h4 id="创建组合查询"><a href="#创建组合查询" class="headerlink" title="创建组合查询"></a>创建组合查询</h4><h4 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h4><h4 id="-2"><a href="#-2" class="headerlink" title=""></a></h4><h3 id="第十八章-全文本搜索"><a href="#第十八章-全文本搜索" class="headerlink" title="第十八章 全文本搜索"></a>第十八章 全文本搜索</h3><h4 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h4><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><h4 id="小结-9"><a href="#小结-9" class="headerlink" title="小结"></a>小结</h4><h4 id="-3"><a href="#-3" class="headerlink" title=""></a></h4><h3 id="-4"><a href="#-4" class="headerlink" title=""></a></h3><h3 id="第十九章-插入数据"><a href="#第十九章-插入数据" class="headerlink" title="第十九章 插入数据"></a>第十九章 插入数据</h3><h4 id="数据插入"><a href="#数据插入" class="headerlink" title="数据插入"></a>数据插入</h4><h4 id="插入完整行"><a href="#插入完整行" class="headerlink" title="插入完整行"></a>插入完整行</h4><h4 id="插入多个行"><a href="#插入多个行" class="headerlink" title="插入多个行"></a>插入多个行</h4><h4 id="插入检索出的数据"><a href="#插入检索出的数据" class="headerlink" title="插入检索出的数据"></a>插入检索出的数据</h4><h4 id="小结-10"><a href="#小结-10" class="headerlink" title="小结"></a>小结</h4><h3 id="第二十章-更新和删除数据"><a href="#第二十章-更新和删除数据" class="headerlink" title="第二十章 更新和删除数据"></a>第二十章 更新和删除数据</h3><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><h4 id="指导原则"><a href="#指导原则" class="headerlink" title="指导原则"></a>指导原则</h4><h4 id="小结-11"><a href="#小结-11" class="headerlink" title="小结"></a>小结</h4><h3 id="第二-十一章-创建和操纵表"><a href="#第二-十一章-创建和操纵表" class="headerlink" title="第二 十一章 创建和操纵表"></a>第二 十一章 创建和操纵表</h3><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><h4 id="更新-1"><a href="#更新-1" class="headerlink" title="更新"></a>更新</h4><h4 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h4><h4 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h4><h4 id="小结-12"><a href="#小结-12" class="headerlink" title="小结"></a>小结</h4><h3 id="第二十二章-使用视图"><a href="#第二十二章-使用视图" class="headerlink" title="第二十二章 使用视图"></a>第二十二章 使用视图</h3><h4 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h4><h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><h4 id="小结-13"><a href="#小结-13" class="headerlink" title="小结"></a>小结</h4><h4 id="-5"><a href="#-5" class="headerlink" title=""></a></h4><h4 id="-6"><a href="#-6" class="headerlink" title=""></a></h4><h3 id="第二十三章-存储过程"><a href="#第二十三章-存储过程" class="headerlink" title="第二十三章 存储过程"></a>第二十三章 存储过程</h3><h4 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h4><h4 id="优点：简单，安全，高性能；"><a href="#优点：简单，安全，高性能；" class="headerlink" title="优点：简单，安全，高性能；"></a>优点：简单，安全，高性能；</h4><ul><li></li><li>​li><li></li></ul><h4 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h4><h4 id="小结-14"><a href="#小结-14" class="headerlink" title="小结"></a>小结</h4><h3 id="第二十四章-游标"><a href="#第二十四章-游标" class="headerlink" title="第二十四章 游标"></a>第二十四章 游标</h3><h4 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h4><h4 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h4><h4 id="小结-15"><a href="#小结-15" class="headerlink" title="小结"></a>小结</h4><h4 id="-7"><a href="#-7" class="headerlink" title=""></a></h4><h3 id="第二十五章-触发器"><a href="#第二十五章-触发器" class="headerlink" title="第二十五章 触发器"></a>第二十五章 触发器</h3><h4 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h4><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><h4 id="删除-2"><a href="#删除-2" class="headerlink" title="删除"></a>删除</h4><h4 id="使用-4"><a href="#使用-4" class="headerlink" title="使用"></a>使用</h4><h4 id="小结-16"><a href="#小结-16" class="headerlink" title="小结"></a>小结</h4><h3 id="第二十六章-管理事务处理"><a href="#第二十六章-管理事务处理" class="headerlink" title="第二十六章 管理事务处理"></a>第二十六章 管理事务处理</h3><h4 id="事务管理"><a href="#事务管理" class="headerlink" title="事务管理"></a>事务管理</h4><h4 id="控制事务处理"><a href="#控制事务处理" class="headerlink" title="控制事务处理"></a>控制事务处理</h4><h4 id="小结-17"><a href="#小结-17" class="headerlink" title="小结"></a>小结</h4><h4 id="-8"><a href="#-8" class="headerlink" title=""></a></h4><h3 id="第二十七章-全球化和本地化"><a href="#第二十七章-全球化和本地化" class="headerlink" title="第二十七章 全球化和本地化"></a>第二十七章 全球化和本地化</h3><h4 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h4><h4 id="校对顺序"><a href="#校对顺序" class="headerlink" title="校对顺序"></a>校对顺序</h4><h4 id="使用字符集和校对顺序"><a href="#使用字符集和校对顺序" class="headerlink" title="使用字符集和校对顺序"></a>使用字符集和校对顺序</h4><h4 id="小结-18"><a href="#小结-18" class="headerlink" title="小结"></a>小结</h4><h4 id="-9"><a href="#-9" class="headerlink" title=""></a></h4><h3 id="第二十八章-安全管理"><a href="#第二十八章-安全管理" class="headerlink" title="第二十八章 安全管理"></a>第二十八章 安全管理</h3><h4 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h4><h4 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h4><h4 id="-10"><a href="#-10" class="headerlink" title=""></a></h4><h4 id="小结-19"><a href="#小结-19" class="headerlink" title="小结"></a>小结</h4><h3 id="第二十九章-数据库维护"><a href="#第二十九章-数据库维护" class="headerlink" title="第二十九章 数据库维护"></a>第二十九章 数据库维护</h3><h4 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h4><h4 id="数据库维护"><a href="#数据库维护" class="headerlink" title="数据库维护"></a>数据库维护</h4><h4 id="诊断启动"><a href="#诊断启动" class="headerlink" title="诊断启动"></a>诊断启动</h4><h4 id="查看日志文件"><a href="#查看日志文件" class="headerlink" title="查看日志文件"></a>查看日志文件</h4><h3 id="第三十章-改善性能"><a href="#第三十章-改善性能" class="headerlink" title="第三十章 改善性能"></a>第三十章 改善性能</h3><h4 id="改善性能"><a href="#改善性能" class="headerlink" title="改善性能"></a>改善性能</h4><h4 id="小结-20"><a href="#小结-20" class="headerlink" title="小结"></a>小结</h4><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><h3 id="-11"><a href="#-11" class="headerlink" title=""></a></h3><h3 id="-12"><a href="#-12" class="headerlink" title=""></a></h3>]]></content>
    
    
    <summary type="html">some of my thinks</summary>
    
    
    
    <category term="thinks" scheme="http://example.com/categories/thinks/"/>
    
    
  </entry>
  
  <entry>
    <title>second of my blog</title>
    <link href="http://example.com/2021/04/22/TCP%20@%20IP/"/>
    <id>http://example.com/2021/04/22/TCP%20@%20IP/</id>
    <published>2021-04-22T06:29:30.000Z</published>
    <updated>2021-04-22T15:42:02.580Z</updated>
    
    <content type="html"><![CDATA[<p>CWR：拥塞窗口减少标志（显示拥塞通知 加在tcp首部保留位）<br>ECE:ECN-Echo（显示拥塞通知 加在tcp首部保留位）</p><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><p>TCP:可靠传输通信<br>UDP：尽力而为传输协议，（细节控制交给应用层）<br>1<br>6.2端口号<br>识别同一台计算机中进行通信的不同应用程序（程序地址）<br>根据端口号识别应用<br>tcp/ip或UDP/IP通信中通常都用五个信息来识别一个通信：<br>源IP地址，源IP地址，协议号，源端口号，目的端口号<br>路由协议通过在路由器之间共享路由信息来支持可路由协议。路由信息在相邻路由器之间传递，确保所有路由器知道到其它路由器的路径。总之，路由协议创建了路由表，描述了网络拓扑结构；路由协议与路由器协同工作，执行路由选择和数据包转发功能。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>路由协议主要运行于路由器上，路由协议是用来确定到达路径的起到一个地图导航，负责找路的作用。它工作在网络层。它包括RIP，IGRP（Cisco私有协议），EIGRP（Cisco私有协议），OSPF，IS-IS，BGP。<br>路由协议作为TCP/IP协议族中重要成员之一，其选路过程实现的好坏会影响整个Internet网络的效率。按应用范围的不同，路由协议可分为两类：<br>1、在一个AS内的路由协议称为内部网关协议（interior gateway protocol）。<br>备注：Autonomous System，自治系统，指一个互连网络，就是把整个Internet划分为许多较小的网络单位，这些小的网络有权自主地决定在本系统中应采用何种路由协议。一般由一个ISP运营的网络如移动/联通的网络位于一个AS（自治系统）内，有统一的AS number（自治系统号）。<br>2、AS之间的路由协议称为外部网关协议（exterior gateway protocol）。这里网关是路由器的旧称。<br><strong>常见的路由协议*</strong><br>有RIP、IGRP（Cisco私有协议）、EIGRP（Cisco私有协议）、OSPF、IS-IS、[BGP](<a href="https://baike.baidu.com/item/BGP">https://baike.baidu.com/item/BGP</a><br><strong>OSPF****<br>OSPF协议是“开放式最短路径优先(Open Shortest Path First)”的缩写，属于链路状态路由协议。OSPF提出了“区域（area）”的概念，每个区域中所有路由器维护着一个相同的链路状态数据库 （LSDB）。OSPF利用所维护的链路状态数据 库，通过最短生成树算法（SPF算法）计算得到路由表。OSPF的收敛速度较快。由于其特有的开放性以及良好的扩展性，目前OSPF协议在各种网络中广泛部署。<br>BGP</strong>****<br>为了维护各个ISP的独立利益，标准化组织制定了ISP间的路由协议BGP。BGP是“边界网关协议（Border Gateway Protocol）”的缩写，处理各ISP之间的路由传递。但是BGP运行在相对核心的地位，需要用户对网络的结构有相当的了解，否则可能会造成较大损失</p>]]></content>
    
    
    <summary type="html">some of my thinks</summary>
    
    
    
    <category term="thinks" scheme="http://example.com/categories/thinks/"/>
    
    
    <category term="thinks" scheme="http://example.com/tags/thinks/"/>
    
  </entry>
  
  <entry>
    <title>First of my blog</title>
    <link href="http://example.com/2021/04/07/First-of-my-blog/"/>
    <id>http://example.com/2021/04/07/First-of-my-blog/</id>
    <published>2021-04-07T06:29:30.000Z</published>
    <updated>2021-04-24T15:40:37.734Z</updated>
    
    
    <summary type="html">some of my thinks</summary>
    
    
    
    <category term="thinks" scheme="http://example.com/categories/thinks/"/>
    
    
    <category term="thinks" scheme="http://example.com/tags/thinks/"/>
    
  </entry>
  
</feed>
